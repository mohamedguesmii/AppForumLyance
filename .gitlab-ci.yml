image: docker:latest

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2

stages:
  - build
  - dockerize
  - deploy

# Étape 1 : Build du backend
build-backend:
  stage: build
  image: maven:3.8.8-openjdk-17
  script:
    - cd EvenementCrud
    - ./mvnw clean package -DskipTests
    - cd ..
  artifacts:
    paths:
      - EvenementCrud/target/*.jar

# Étape 2 : Build du frontend
build-frontend:
  stage: build
  image: node:18
  script:
    - cd dashfront
    - npm install
    - npm run build --prod
    - cd ..
  artifacts:
    paths:
      - dashfront/dist/

# Étape 3 : Dockerize (construction des images avec docker-compose)
dockerize:
  stage: dockerize
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "🐳 Construction des images Docker"
    - docker-compose build
  needs:
    - build-backend
    - build-frontend

# Étape 4 : Deploy (lancement des conteneurs avec docker-compose)
deploy:
  stage: deploy
  image: docker/compose:latest
  services:
    - docker:dind
  script:
    - echo "🚀 Déploiement avec docker-compose"
    - docker-compose down
    - docker-compose up -d
  only:
    - main   # déploiement uniquement sur la branche main
  needs:
    - dockerize
