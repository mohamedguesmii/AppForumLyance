image: docker:latest

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2

stages:
  - build
  - dockerize
  - deploy

# ------------------------
# Build Backend (Spring Boot)
# ------------------------
build-backend:
  stage: build
  image: maven:3.8.8-jdk-17  # tag correct
  script:
    - cd EvenementCrud
    - ./mvnw clean package -DskipTests
    - cd ..
  artifacts:
    paths:
      - EvenementCrud/target/*.jar

# ------------------------
# Build Frontend (Angular)
# ------------------------
build-frontend:
  stage: build
  image: node:18
  script:
    - cd dashfront
    - npm install --legacy-peer-deps   # √©viter les conflits de d√©pendances
    - npm run build --prod
    - cd ..
  artifacts:
    paths:
      - dashfront/dist/

# ------------------------
# Dockerize tous les services
# ------------------------
dockerize:
  stage: dockerize
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "üê≥ Construction des images Docker"
    - docker-compose build
  needs:
    - build-backend
    - build-frontend

# ------------------------
# D√©ploiement via Docker Compose
# ------------------------
deploy:
  stage: deploy
  image: docker/compose:latest
  services:
    - docker:dind
  script:
    - echo "üöÄ D√©ploiement des services"
    - docker-compose down
    - docker-compose up -d
  only:
    - main
  needs:
    - dockerize
